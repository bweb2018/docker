{"version":3,"sources":["components/button.jsx","models.js","content/steps/index.js","settingsEditor/visitors.js","settingsEditor/validator.js","config-utils.js","title.jsx","components/card.jsx","content/addStep.jsx","settingsEditor/settings/choiceGroup.jsx","settingsEditor/settings/textField.jsx","settingsEditor/settings/tableEditor.jsx","settingsEditor/settings/tagGroup.jsx","settingsEditor/index.jsx","content/editStep.jsx","content/editGeneral.jsx","content/dockers/index.js","content/editDocker.jsx","content/editDockerfile.jsx","content/index.jsx","pipeline/stepList.jsx","pipeline/pipeline.jsx","App.jsx","index.js"],"names":["Button","_ref","className","dark","mild","disabled","onClick","children","others","Object","objectWithoutProperties","react","assign","concat","style","cursor","userSelect","C","hover-bg-pd","hover-bg-p","hover-bg-pl","defaultProps","os","PropTypes","availableOSs","stepCommand","step","id","isRequired","name","type","invalid","config","baseStepSetting","version","general","shell","workdir","env_variables","key","value","base_docker","image_url","custom","presetBase","run_steps","entrypoint_steps","stepToEdit","text","label","description","condition","textFieldSetting","objectSpread","regex","required","choiceOption","iconClass","choiceSetting","options","tableHeader","unique","tableSetting","headers","transform","tagGroupTag","tagList","tagGroupSetting","groupLabels","tags","stepSetting","availableBaseStep","command","configFinalize","defaultConfig","icon","availableSavedStep","author","baseType","createdAt","availableSteps","getStep","memoize","find","s","getStepSettings","foundAvailableStep","Error","settingTransformDefinitions","field","setting","length","load","entries","map","_ref2","slicedToArray","save","fromPairs","pair","_ref3","flatarray","val","defineProperty","settings","values","isStep","newValues","cloneDeep","forEach","equals","currVal","undefined","validate","Array","isArray","every","RegExp","test","filter","x","col","uniq","row","ex","visitConfigSettings","visitorfn","newConfig","Settings","_map","steps","_map2","configPreSave","Visitors","array","item","step_type","Title","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","loading","fileInput","React","handleFiles","bind","assertThisInitialized","_this2","onUpdate","file","current","files","setState","reader","FileReader","onload","e","data","yaml","target","result","uuid","Alert","error","position","readAsText","_this3","_this$props","onReset","onSwitchContent","margin","components_button","click","ref","accept","display","onChange","blob","Blob","FileSaver","saveAs","Card","warning","selected","pointer","bg-white-80","bg-white hover-bg-white-90","bg-washed-red","AddStep","selectedCard","editing","editingSavedStep","onConfigChange","configUpdate","newSavedStep","onConfigSave","onEdit","cardId","savedStep","filteredSteps","card","components_card","onSelect","stopPropagation","stepListName","c","optional","newStepList","push","_this$props2","includes","renderBaseStepList","ChoiceGroup","onPropChange","option","b--pd","b--pl","c-st","TextField","red","ba b--red","TableEditor","newVal","validateAndUpdate","splice","flatHeaders","gridTemplateColumns","idx","onRemoveRow","onAddRow","ResultSymbol","Symbol","TagGroup","getReverseLookup","memoizeOne","values2parts","getTagTree","tree","parts","cur","part","getOrDefaultChosen","previousParts","_this$getOrDefaultCho","toConsumableArray","slice","reduce","node","rawChosen","_this$props3","chosen","newChosen","i","_Object$keys","keys","_Object$keys2","_this$props4","content","_loop","choiceGroup","SettingsEditor","res","textField_TextField","tableEditor_TableEditor","tagGroup_TagGroup","pt3","pt1","EditStep","onNameChange","submitChange","editingStep","onSaveInfoChange","saveInfoUpdate","saveInfo","newSaveInfo","onLeaveSavingMode","saving","delete","findIndex","editingName","to","newStep","_this$state","baseStep","onBlur","settingsEditor_SettingsEditor","EditGeneral","generalUpdate","dockers","ResetButton","EditDocker","getPreset","base","p","onPresetUpdate","tag","newBaseDocker","update","onCustomUpdate","dockerUpdate","pred","baseDocker","editDocker_ResetButton","onPresetChosen","preset","split","pop","EditDockerfile","onCopy","textArea","select","document","execCommand","onSave","createRef","react_default","a","createElement","height","maxHeight","spellCheck","Component","stepTypeTitle","add_run_step","add_entrypoint_step","edit_run_step","edit_entrypoint_step","edit_general","edit_docker","edit_dockerfile","Content","sharedProps","addStep","editStep","editGeneral_EditGeneral","editDocker","editDockerfile","mergeRefs","_len","arguments","refs","_key","resolvableRef","StepList","lastCount","items","lastItemRef","onDragEnd","scrollIntoView","block","behavior","destination","start","source","index","end","newItems","_newItems$splice","removed","react_beautiful_dnd_esm","droppableId","provided","innerRef","flexGrow","draggableId","provided2","draggableProps","dragHandleProps","ni","Pipeline","stepList","dummyConfig","App","savedSteps","localStorage","getItem","JSON","parse","setItem","stringify","hasInvalid","validateConfig","newContent","toString","_this$state2","title_Title","pipeline","src_content","react_s_alert_default","stack","limit","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.c2dcd186.chunk.js","sourcesContent":["import * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport C from 'classnames';\n\nconst Button = ({\n  className, dark, mild, disabled, onClick, children, ...others\n}) => (\n  disabled\n    ? (\n      <span\n        className={`pa2 c-st ${className}`}\n        style={{ cursor: 'not-allowed', userSelect: 'none' }}\n        {...others}\n      >\n        {children}\n      </span>\n    )\n    : (\n      <span\n        className={C({\n          'hover-bg-pd': mild,\n          'hover-bg-p': dark && !mild,\n          'hover-bg-pl': !dark && !mild,\n        }, 'pa2 pointer', className)}\n        style={{ userSelect: 'none' }}\n        onClick={onClick}\n        {...others}\n      >\n        {children}\n      </span>\n    )\n);\n\nButton.propTypes = {\n  disabled: PropTypes.bool,\n  dark: PropTypes.bool,\n  mild: PropTypes.bool,\n  onClick: PropTypes.func,\n  className: PropTypes.string,\n};\n\nButton.defaultProps = {\n  dark: false,\n  mild: false,\n  className: '',\n  disabled: false,\n  onClick: null,\n};\n\nexport default Button;\n","import * as PropTypes from 'prop-types';\nimport { availableOSs } from './content/settings';\n\nexport const os = PropTypes.oneOf(availableOSs);\nexport const stepCommand = PropTypes.oneOf(['run', 'entrypoint']);\n\nexport const step = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  invalid: PropTypes.bool,\n  config: PropTypes.object,\n});\n\nexport const config = PropTypes.shape({\n  version: PropTypes.string.isRequired,\n  general: PropTypes.shape({\n    name: PropTypes.string,\n    shell: PropTypes.string,\n    workdir: PropTypes.string,\n    env_variables: PropTypes.arrayOf(PropTypes.shape({\n      key: PropTypes.string,\n      value: PropTypes.string,\n    })).isRequired,\n    invalid: PropTypes.bool,\n  }),\n  base_docker: PropTypes.shape({\n    image_url: PropTypes.string,\n    os,\n    custom: PropTypes.bool,\n    presetBase: PropTypes.string,\n    invalid: PropTypes.bool,\n  }).isRequired,\n  run_steps: PropTypes.arrayOf(step).isRequired,\n  entrypoint_steps: PropTypes.arrayOf(step).isRequired,\n  invalid: PropTypes.bool,\n});\n\nexport const content = PropTypes.shape({\n  type: PropTypes.oneOf([\n    'add_run_step',\n    'add_entrypoint_step',\n    'edit_run_step',\n    'edit_entrypoint_step',\n    'edit_general',\n    'edit_docker',\n    'edit_dockerfile',\n  ]).isRequired,\n  stepToEdit: step,\n  text: PropTypes.string,\n});\n\nexport const baseStepSetting = {\n  label: PropTypes.node,\n  name: PropTypes.string.isRequired,\n  description: PropTypes.node,\n  condition: PropTypes.object,\n};\n\nexport const textFieldSetting = PropTypes.shape({\n  ...baseStepSetting,\n  type: PropTypes.oneOf(['text']).isRequired,\n  regex: PropTypes.string,\n  required: PropTypes.bool,\n  disabled: PropTypes.bool,\n});\n\nexport const choiceOption = PropTypes.shape({\n  iconClass: PropTypes.string,\n  name: PropTypes.string.isRequired,\n});\n\nexport const choiceSetting = PropTypes.shape({\n  ...baseStepSetting,\n  type: PropTypes.oneOf(['choice']).isRequired,\n  options: PropTypes.arrayOf(choiceOption).isRequired,\n});\n\nexport const tableHeader = PropTypes.oneOfType([\n  PropTypes.string,\n  PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    unique: PropTypes.bool,\n  }),\n]);\n\nexport const tableSetting = PropTypes.shape({\n  ...baseStepSetting,\n  type: PropTypes.oneOf(['table']).isRequired,\n  headers: PropTypes.arrayOf(tableHeader).isRequired,\n  transform: PropTypes.oneOf(['field', 'flatarray']),\n});\n\nexport const tagGroupTag = PropTypes.shape({\n  tagList: PropTypes.arrayOf(PropTypes.string).isRequired,\n  name: PropTypes.string.isRequired,\n});\n\nexport const tagGroupSetting = PropTypes.shape({\n  ...baseStepSetting,\n  type: PropTypes.oneOf(['tag-group']).isRequired,\n  groupLabels: PropTypes.arrayOf(PropTypes.node).isRequired,\n  tags: PropTypes.arrayOf(tagGroupTag).isRequired,\n});\n\nexport const stepSetting = PropTypes.oneOfType([\n  textFieldSetting,\n  choiceSetting,\n  tableSetting,\n  tagGroupSetting,\n]);\n\nexport const availableBaseStep = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  command: PropTypes.arrayOf(stepCommand).isRequired,\n  os: PropTypes.arrayOf(os).isRequired,\n  config: PropTypes.arrayOf(stepSetting),\n  configFinalize: PropTypes.func,\n  defaultConfig: PropTypes.object,\n  icon: PropTypes.string,\n});\n\nexport const availableSavedStep = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  baseType: PropTypes.string.isRequired,\n  createdAt: PropTypes.string.isRequired,\n  defaultConfig: PropTypes.object.isRequired,\n});\n\nexport const savedSteps = PropTypes.arrayOf(availableSavedStep);\n\nexport const availableStep = PropTypes.oneOf([\n  availableBaseStep,\n  availableSavedStep,\n]);\n","import { memoize } from 'lodash';\n\nimport condaInstall from './conda_install.json';\nimport installGit from './install_git.json';\nimport gitClone from './git_clone.json';\nimport installConda from './install_conda.json';\nimport installPython from './install_python.json';\nimport hdfsDownload from './hdfs_download.json';\nimport customCommand from './custom_command.json';\n\nexport const availableSteps = [\n  condaInstall,\n  installGit,\n  gitClone,\n  installConda,\n  installPython,\n  hdfsDownload,\n  customCommand,\n];\n\nexport function filterSteps(command, os) {\n  return availableSteps.filter(s => s.command.includes(command) && s.os.includes(os));\n}\n\nexport const getStep = memoize(type => availableSteps.find(s => s.type === type));\n\nexport const getStepSettings = memoize((type) => {\n  const foundAvailableStep = getStep(type);\n  if (!foundAvailableStep) {\n    throw new Error(`Missing step prototype for ${type}`);\n  }\n  return foundAvailableStep.config;\n});\n","import { cloneDeep, fromPairs } from 'lodash';\n\nconst settingTransformDefinitions = {\n  field: {\n    condition: (value, setting) => setting.type === 'table' && setting.headers.length === 2,\n    load: value => Object.entries(value).map(([key, val]) => ({ key, value: val })),\n    save: (value, setting) => fromPairs(\n      value.map(pair => setting.headers.map(({ name }) => pair[name])),\n    ),\n  },\n  flatarray: {\n    condition: (value, setting) => setting.type === 'table' && setting.headers.length === 1,\n    load: (value, setting) => value.map(val => ({ [setting.headers[0].name]: val })),\n    save: (value, setting) => value.map(val => val[setting.headers[0].name]),\n  },\n};\n\nexport const save = (settings, values, isStep) => {\n  const newValues = cloneDeep(values);\n  settings.forEach((setting) => {\n    if (setting.condition\n      && (isStep ? values.config : values)[setting.condition.name] !== setting.condition.equals) {\n      delete (isStep ? newValues.config : newValues)[setting.name];\n      return;\n    }\n    const transform = setting.transform && settingTransformDefinitions[setting.transform];\n    const currVal = isStep ? values.config[setting.name] : values[setting.name];\n    if (currVal !== undefined && transform && transform.condition(currVal, setting)) {\n      (isStep ? newValues.config : newValues)[setting.name] = transform.save(currVal, setting);\n    }\n  });\n  return newValues;\n};\n\nexport const load = (settings, values, isStep) => {\n  const newValues = cloneDeep(values);\n  settings.forEach((setting) => {\n    const transform = setting.transform && settingTransformDefinitions[setting.transform];\n    const currVal = isStep ? values.config[setting.name] : values[setting.name];\n    if (currVal !== undefined && transform && transform.condition(currVal, setting)) {\n      (isStep ? newValues.config : newValues)[setting.name] = transform.load(currVal, setting);\n    }\n  });\n  return newValues;\n};\n","import { uniq } from 'lodash';\n\nexport default function validate(settings, value) {\n  try {\n    if (Array.isArray(settings)) {\n      return settings.every((s) => {\n        if (s.condition && value[s.condition.name] !== s.condition.equals) {\n          return true;\n        }\n        return validate(s, value[s.name]);\n      });\n    }\n\n    if (settings.type === 'text') {\n      const { regex, required } = settings;\n      return (!required || value) && (!regex || new RegExp(regex).test(value));\n    }\n\n    if (settings.type === 'table') {\n      const { headers } = settings;\n      const uniqueColumns = headers.filter(\n        x => typeof x === 'object' && x.unique,\n      ).map(\n        x => x.name,\n      );\n      return uniqueColumns.every(\n        col => uniq(value.map(row => row[col])).length === value.length,\n      );\n    }\n\n    return true;\n  } catch (ex) {\n    return false;\n  }\n}\n","/* eslint-disable no-param-reassign */\nimport uuid from 'uuid';\nimport { getStepSettings } from './content/steps';\nimport * as Settings from './content/settings';\nimport * as Visitors from './settingsEditor/visitors';\nimport validate from './settingsEditor/validator';\n\n// visitorfn(settings, values, [isStep])\nexport function visitConfigSettings(config, visitorfn) {\n  const newConfig = {\n    version: config.version,\n  };\n  newConfig.general = visitorfn(Settings.general, config.general);\n  newConfig.base_docker = visitorfn(Settings.docker, config.base_docker);\n  [newConfig.run_steps, newConfig.entrypoint_steps] = [config.run_steps, config.entrypoint_steps]\n    .map(steps => steps\n      .map(step => visitorfn(getStepSettings(step.type), step, true)));\n  return newConfig;\n}\n\nexport function validateConfig(config) {\n  let hasInvalid = false;\n  const newConfig = visitConfigSettings(\n    config,\n    (settings, values, isStep) => {\n      const invalid = isStep\n        ? !validate(settings, values.config) || !values.name\n        : !validate(settings, values);\n      hasInvalid = hasInvalid || invalid;\n      return { ...values, invalid };\n    },\n  );\n  if (hasInvalid) {\n    newConfig.invalid = true;\n  }\n  return newConfig;\n}\n\nexport function configPreSave(config) {\n  const newConfig = visitConfigSettings(config, Visitors.save);\n  [newConfig.run_steps, newConfig.entrypoint_steps]\n    .forEach(array => array.forEach((item) => {\n      item.step_type = item.type;\n      delete item.type;\n      delete item.id;\n    }));\n  Object.assign(newConfig, newConfig.general);\n  delete newConfig.general;\n  return newConfig;\n}\n\nexport function configPostLoad(config) {\n  config.general = {};\n  ['name', 'shell', 'env_variables', 'workdir'].forEach((key) => {\n    config.general[key] = config[key];\n    delete config[key];\n  });\n  [config.run_steps, config.entrypoint_steps].forEach(array => array.forEach((item) => {\n    item.id = uuid();\n    item.type = item.step_type;\n    delete item.step_type;\n  }));\n  const newConfig = visitConfigSettings(config, Visitors.load);\n  return newConfig;\n}\n","import Alert from 'react-s-alert';\nimport FileSaver from 'file-saver';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as yaml from 'js-yaml';\n\n// import gelato from './gelato/lib/index';\nimport Button from './components/button';\nimport * as Models from './models';\nimport { configPostLoad, configPreSave } from './config-utils';\n\nexport default class Title extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n    };\n    this.fileInput = React.createRef();\n    this.handleFiles = this.handleFiles.bind(this);\n  }\n\n  handleFiles() {\n    const { onUpdate } = this.props;\n    const file = this.fileInput.current.files[0];\n    if (file) {\n      this.setState({\n        loading: true,\n      });\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        try {\n          const data = yaml.safeLoad(e.target.result);\n          // TODO: validation\n          onUpdate(configPostLoad(data));\n        } catch (ex) {\n          Alert.error(`The imported file is invalid: ${ex}`, { position: 'bottom-right' });\n        }\n        this.fileInput.current.value = null;\n        this.setState({\n          loading: false,\n        });\n      };\n      reader.readAsText(file);\n    }\n  }\n\n  render() {\n    const {\n      config, onReset, onSwitchContent, invalid,\n    } = this.props;\n    const { loading } = this.state;\n    return (\n      <div className=\"f3 bg-pd c-t h3 block\">\n        <div className=\"pa3 flex justify-between items-center mw9\" style={{ margin: '0 auto' }}>\n          <div>Project Title</div>\n          <div className=\"f5\">\n            <Button\n              dark\n              onClick={onReset}\n              disabled={loading}\n            >\n              Reset\n            </Button>\n            <Button\n              dark\n              onClick={() => { this.fileInput.current.click(); }}\n              disabled={loading}\n            >\n              Import Config\n            </Button>\n            <input\n              ref={this.fileInput}\n              type=\"file\"\n              accept=\"text/x-yaml|application/json\"\n              style={{ display: 'none' }}\n              onChange={this.handleFiles}\n            />\n            <Button\n              dark\n              onClick={() => {\n                const blob = new Blob([yaml.safeDump(configPreSave(config))], { type: 'text/x-yaml' });\n                FileSaver.saveAs(blob, `${config.general.name}.yaml`);\n              }}\n            >\n              Export Config\n            </Button>\n            <Button\n              dark\n              className=\"dn\"\n              disabled={invalid}\n              onClick={() => {\n                try {\n                  onSwitchContent({\n                    type: 'edit_dockerfile',\n                    // text: gelato(configPreSave(config)),\n                  });\n                } catch (ex) {\n                  Alert.error(`An error occured while generating Dockerfile: ${ex}`, { position: 'bottom-right' });\n                }\n              }}\n            >\n              Generate Dockerfile\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nTitle.propTypes = {\n  config: Models.config.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n  onReset: PropTypes.func.isRequired,\n  onSwitchContent: PropTypes.func.isRequired,\n  invalid: PropTypes.bool,\n};\n\nTitle.defaultProps = {\n  invalid: false,\n};\n","import * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport C from 'classnames';\n\nconst Card = ({\n  name,\n  icon,\n  warning,\n  onClick,\n  selected,\n  pointer,\n  children,\n}) => (\n  <div\n    className={C({\n      'bg-white-80': selected,\n      'bg-white hover-bg-white-90': !selected && !warning,\n      'bg-washed-red': warning,\n      pointer,\n    }, 'h3 pa3 flex items-center justify-between')}\n    style={{ userSelect: 'none' }}\n    onClick={onClick}\n  >\n    <div className=\"flex\">\n      { icon && (\n        <div className=\"w2\">\n          <i className={`f4 ${icon}`} />\n        </div>\n      )}\n      <div>{name}</div>\n    </div>\n    <div>\n      {warning && <i className=\"f4 dark-red fa fa-exclamation-triangle\" />}\n      {children}\n    </div>\n  </div>\n);\n\nCard.propTypes = {\n  name: PropTypes.node.isRequired,\n  icon: PropTypes.string,\n  onClick: PropTypes.func,\n  warning: PropTypes.bool,\n  selected: PropTypes.bool,\n  pointer: PropTypes.bool,\n  children: PropTypes.node,\n};\n\nCard.defaultProps = {\n  icon: '',\n  onClick: () => {},\n  selected: false,\n  pointer: false,\n  warning: false,\n  children: null,\n};\n\nexport default Card;\n","import { cloneDeep } from 'lodash';\nimport uuid from 'uuid';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport Card from '../components/card';\nimport * as Models from '../models';\nimport { filterSteps, getStepSettings } from './steps';\nimport Button from '../components/button';\nimport validate from '../settingsEditor/validator';\n\nclass AddStep extends React.Component {\n  state = {\n    selectedCard: '',\n    editing: false,\n    editingSavedStep: {},\n  };\n\n  onSelect(cardId) {\n    this.setState({ selectedCard: cardId, editingSavedStep: {}, editing: false });\n  }\n\n  onEdit(savedStep) {\n    if (!savedStep) {\n      this.setState({ editingSavedStep: {}, editing: false });\n    } else {\n      this.setState({ editingSavedStep: savedStep, editing: true });\n    }\n  }\n\n  onConfigChange = (configUpdate) => {\n    const { editingSavedStep } = this.state;\n    const newSavedStep = cloneDeep(editingSavedStep);\n    newSavedStep.defaultConfig = { ...newSavedStep.defaultConfig, ...configUpdate };\n    newSavedStep.defaultConfig.invalid = !validate(\n      getStepSettings(editingSavedStep.baseType),\n      newSavedStep.defaultConfig,\n    );\n    this.setState({ editingSavedStep: newSavedStep });\n  }\n\n  onConfigSave = () => {\n    this.onEdit(null);\n  }\n\n  renderBaseStepList(filteredSteps) {\n    const { config, type, onUpdate } = this.props;\n    const { selectedCard } = this.state;\n\n    return filteredSteps.map((item) => {\n      const card = (\n        <Card\n          key={item.type}\n          name={item.name}\n          selected={item.type === selectedCard}\n          pointer\n          icon={item.icon || 'fa fa-terminal'}\n          onClick={() => this.onSelect(item.type)}\n        >\n          <Button\n            onClick={(e) => {\n              e.stopPropagation();\n\n              const stepListName = `${type}_steps`;\n              const step = {\n                id: uuid(),\n                name: item.name,\n                type: item.type,\n                config: item.defaultConfig || {},\n              };\n              if (item.config && !item.config.every(c => c.optional)) {\n                step.invalid = true;\n              }\n\n              const newStepList = cloneDeep(config[stepListName]);\n              newStepList.push(step);\n              onUpdate({ [stepListName]: newStepList });\n            }}\n          >\n            <i className=\"fa fa-plus\" />\n          </Button>\n        </Card>\n      );\n      if (selectedCard === item.type) {\n        return <>\n          {card}\n          <div className=\"f6 c-st ph3 pb3 bg-white-80\">\n            Description: <span className=\"c-pt\">{item.description || item.name}</span>\n          </div>\n        </>;\n      }\n\n      return card;\n    });\n  }\n\n  render() {\n    const { config, type } = this.props;\n    const filteredSteps = filterSteps(type, config.base_docker.os);\n    return (\n      <div>\n        <div className=\"bg-pl pv1 ph2 f6\">Base Steps</div>\n        {this.renderBaseStepList(filteredSteps)}\n      </div>\n    );\n  }\n}\n\nAddStep.propTypes = {\n  config: Models.config.isRequired,\n  type: Models.stepCommand.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n};\n\nexport default AddStep;\n","import * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport C from 'classnames';\n\nimport * as models from '../../models';\n\nclass ChoiceGroup extends React.Component {\n  componentDidMount() {\n    this.onPropChange();\n  }\n\n  componentDidUpdate() {\n    this.onPropChange();\n  }\n\n  onPropChange() {\n    const { onUpdate, options, value } = this.props;\n    if (!options || !options.length) {\n      throw new Error('invalid options');\n    }\n    if (!value || !options.find(x => x.name === value)) {\n      onUpdate(options[0].name);\n    }\n  }\n\n  render() {\n    const {\n      label, options, onUpdate, value, disabled,\n    } = this.props;\n    return (\n      <>\n        <div>{label}</div>\n        <div className=\"pt2 pl0\">\n          {\n            options.map(option => (\n              <div\n                key={option.name}\n                className={C({\n                  'b--pd': value === option.name,\n                  'b--pl': value !== option.name,\n                  'c-st': disabled,\n                  pointer: !disabled,\n                }, 'ba dib mr2 mb1 pv1 ph2')}\n                style={{ userSelect: 'none' }}\n                onClick={disabled ? null : (() => onUpdate(option.name))}\n              >\n                {option.iconClass && <i className={C(option.iconClass, 'mr1')} />}\n                {option.name}\n              </div>\n            ))\n          }\n        </div>\n      </>\n    );\n  }\n}\n\nChoiceGroup.propTypes = {\n  label: PropTypes.node.isRequired,\n  options: PropTypes.arrayOf(models.choiceOption).isRequired,\n  onUpdate: PropTypes.func.isRequired,\n  value: PropTypes.string,\n  disabled: PropTypes.bool,\n};\n\nChoiceGroup.defaultProps = {\n  value: '',\n  disabled: false,\n};\n\nexport default ChoiceGroup;\n","import * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport C from 'classnames';\n\nexport default class TextField extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      invalid: !props.validate(props.value),\n    };\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(e) {\n    const { onUpdate, validate } = this.props;\n    const { value } = e.target;\n    if (validate(value)) {\n      this.setState({ invalid: false });\n    } else {\n      this.setState({ invalid: true });\n    }\n    onUpdate(value);\n  }\n\n  render() {\n    const { invalid } = this.state;\n    const { value, label, disabled } = this.props;\n    return (\n      <>\n        <div className={C({ red: invalid })}>{label}</div>\n        {\n          !disabled\n            ? (\n              <input\n                className={C({ 'ba b--red': invalid }, 'mt2 ph2 pv1 w-100')}\n                value={value}\n                onChange={this.onChange}\n              />\n            )\n            : (\n              <input\n                className=\"mt2 ph2 pv1 w-100\"\n                disabled\n                value={value}\n              />\n            )\n        }\n      </>\n    );\n  }\n}\n\nTextField.propTypes = {\n  label: PropTypes.node.isRequired,\n  value: PropTypes.string,\n  onUpdate: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n  validate: PropTypes.func.isRequired,\n};\n\nTextField.defaultProps = {\n  value: '',\n  disabled: false,\n};\n","import C from 'classnames';\nimport { cloneDeep } from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport * as models from '../../models';\nimport Button from '../../components/button';\n\nexport default class TableEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      invalid: !props.validate(props.value),\n    };\n  }\n\n  onChange(row, col, val) {\n    const { value } = this.props;\n    const newVal = cloneDeep(value);\n    newVal[row][col] = val;\n    this.validateAndUpdate(newVal);\n  }\n\n  onAddRow() {\n    const { value } = this.props;\n    const newVal = cloneDeep(value);\n    newVal.push({});\n    this.validateAndUpdate(newVal);\n  }\n\n  onRemoveRow(row) {\n    const { value } = this.props;\n    const newVal = cloneDeep(value);\n    newVal.splice(row, 1);\n    this.validateAndUpdate(newVal);\n  }\n\n  validateAndUpdate(newVal) {\n    const { onUpdate, validate } = this.props;\n    if (validate(newVal)) {\n      this.setState({ invalid: false });\n    } else {\n      this.setState({ invalid: true });\n    }\n    onUpdate(newVal);\n  }\n\n  render() {\n    const { invalid } = this.state;\n    const {\n      label, value, headers, disabled,\n    } = this.props;\n    const flatHeaders = headers.map(x => (\n      typeof x === 'object' ? x.name : x\n    ));\n\n    return (\n      <>\n        <div className={C({ red: invalid })}>\n          {label}\n        </div>\n        <div\n          style={{\n            display: 'grid',\n            gridTemplateColumns: `repeat(${flatHeaders.length}, auto) min-content`,\n          }}\n          className=\"pv2 pl2\"\n        >\n          {flatHeaders.map((x => (\n            <div key={`header-${x}`} className=\"pb2\">\n              {x}\n            </div>\n          )))}\n          <div />\n          {value.map((row, idx) => (\n            // eslint-disable-next-line react/no-array-index-key\n            <React.Fragment key={idx}>\n              {flatHeaders.map(col => (\n                <input\n                  // eslint-disable-next-line react/no-array-index-key\n                  key={col + idx}\n                  className=\"ph2 pv1 w-100\"\n                  value={row[col] || ''}\n                  type=\"text\"\n                  onChange={e => this.onChange(idx, col, e.target.value)}\n                  disabled={disabled}\n                />\n              ))}\n              <Button\n                // eslint-disable-next-line react/no-array-index-key\n                key={idx}\n                onClick={() => this.onRemoveRow(idx)}\n                disabled={disabled}\n              >\n                <i className=\"fa fa-remove\" />\n              </Button>\n            </React.Fragment>\n          ))}\n        </div>\n        <div className=\"mt1\">\n          <Button onClick={() => this.onAddRow()} disabled={disabled}>\n            <i className=\"fa fa-plus mr1\" />\n            <span>Add</span>\n          </Button>\n        </div>\n      </>\n    );\n  }\n}\n\nTableEditor.propTypes = {\n  label: PropTypes.node.isRequired,\n  headers: PropTypes.arrayOf(models.tableHeader).isRequired,\n  // eslint-disable-next-line\n  value: PropTypes.array,\n  onUpdate: PropTypes.func.isRequired,\n  validate: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n};\n\nTableEditor.defaultProps = {\n  value: [],\n  disabled: false,\n};\n","import memoizeOne from 'memoize-one';\nimport * as PropTypes from 'prop-types';\nimport { cloneDeep } from 'lodash';\nimport * as React from 'react';\nimport ChoiceGroup from './choiceGroup';\nimport { tagGroupTag } from '../../models';\n\nconst ResultSymbol = Symbol('Result');\n\nexport default class TagGroup extends React.Component {\n  getReverseLookup = memoizeOne((tags) => {\n    const values2parts = {};\n    tags.forEach((x) => {\n      values2parts[x.name] = x.tagList;\n    });\n    return values2parts;\n  });\n\n  getTagTree = memoizeOne((tags) => {\n    const tree = {};\n    tags.forEach((x) => {\n      const parts = x.tagList;\n      let cur = tree;\n      parts.forEach((part) => {\n        if (!cur[part]) {\n          cur[part] = {};\n        }\n        cur = cur[part];\n      });\n      cur[ResultSymbol] = x.name;\n    });\n\n    return tree;\n  });\n\n  componentDidMount() {\n    const { onUpdate, value } = this.props;\n    if (!value) {\n      onUpdate(this.getOrDefaultChosen().result);\n    }\n  }\n\n  onChange(idx, val) {\n    const { onUpdate, tags, value } = this.props;\n    const previousParts = (value && this.getReverseLookup(tags)[value]) || [];\n    const { parts, result } = this.getOrDefaultChosen([...previousParts.slice(0, idx), val]);\n    onUpdate(result || parts.reduce(\n      (node, part) => node[part],\n      this.getTagTree(tags),\n    )[ResultSymbol]);\n  }\n\n  getOrDefaultChosen(rawChosen) {\n    const { groupLabels, tags } = this.props;\n    const chosen = rawChosen || [];\n    if (chosen.length < groupLabels.length) {\n      let cur = this.getTagTree(tags);\n      const newChosen = cloneDeep(chosen);\n      for (let i = 0; i < groupLabels.length; i += 1) {\n        if (!newChosen[i]) {\n          [newChosen[i]] = Object.keys(cur);\n        }\n        cur = cur[newChosen[i]];\n      }\n      return { parts: newChosen, result: cur[ResultSymbol] };\n    }\n    return { parts: chosen };\n  }\n\n  render() {\n    const {\n      label, value, groupLabels, tags, disabled,\n    } = this.props;\n\n    const { parts } = this.getOrDefaultChosen((value && this.getReverseLookup(tags)[value]) || []);\n    const content = [];\n    let cur = this.getTagTree(tags);\n    for (let i = 0; i < groupLabels.length; i += 1) {\n      content.push(\n        <div className=\"pt3 pb1 f6\">\n          <ChoiceGroup\n            key={groupLabels[i]}\n            label={groupLabels[i]}\n            options={Object.keys(cur).map(x => ({ name: x }))}\n            value={parts[i]}\n            onUpdate={val => this.onChange(i, val)}\n            disabled={disabled}\n          />\n        </div>,\n      );\n      cur = cur[parts[i]];\n    }\n\n    return (\n      <>\n        <div>\n          {label}\n        </div>\n        <div className=\"pl2\">\n          {content}\n        </div>\n      </>\n    );\n  }\n}\n\nTagGroup.propTypes = {\n  label: PropTypes.node.isRequired,\n  groupLabels: PropTypes.arrayOf(PropTypes.node).isRequired,\n  tags: PropTypes.arrayOf(tagGroupTag).isRequired,\n  value: PropTypes.string,\n  onUpdate: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n};\n\nTagGroup.defaultProps = {\n  value: '',\n  disabled: false,\n};\n","import C from 'classnames';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport * as models from '../models';\nimport ChoiceGroup from './settings/choiceGroup';\nimport TextField from './settings/textField';\nimport TableEditor from './settings/tableEditor';\nimport TagGroup from './settings/tagGroup';\nimport validate from './validator';\n\nexport default class SettingsEditor extends React.Component {\n  onUpdate(key, value) {\n    const { onUpdate } = this.props;\n    const res = {};\n    res[key] = value;\n    onUpdate(res);\n  }\n\n  render() {\n    const { settings, value, disabled } = this.props;\n    return settings.map((setting, i) => {\n      let { label } = setting;\n      if (!label) {\n        label = setting.name;\n      }\n      if (setting.condition && value[setting.condition.name] !== setting.condition.equals) {\n        return null;\n      }\n      let content = null;\n      switch (setting.type) {\n        case 'text':\n          content = (\n            <TextField\n              label={label}\n              value={value[setting.name]}\n              onUpdate={val => this.onUpdate(setting.name, val)}\n              validate={val => validate(setting, val)}\n              disabled={setting.disabled || disabled}\n            />\n          );\n          break;\n        case 'choice':\n          content = (\n            <ChoiceGroup\n              label={label}\n              value={value[setting.name]}\n              onUpdate={val => this.onUpdate(setting.name, val)}\n              options={setting.options}\n              disabled={disabled}\n            />\n          );\n          break;\n        case 'table':\n          content = (\n            <TableEditor\n              label={label}\n              value={value[setting.name]}\n              onUpdate={val => this.onUpdate(setting.name, val)}\n              validate={val => validate(setting, val)}\n              headers={setting.headers}\n              disabled={disabled}\n            />\n          );\n          break;\n        case 'tag-group':\n          content = (\n            <TagGroup\n              label={label}\n              value={value[setting.name]}\n              onUpdate={val => this.onUpdate(setting.name, val)}\n              groupLabels={setting.groupLabels}\n              tags={setting.tags}\n              disabled={disabled}\n            />\n          );\n          break;\n        default:\n          throw new Error(`invalid setting type ${setting.type}`);\n      }\n      return (\n        <div\n          className={C({ pt3: i > 0, pt1: i === 0 }, 'pb1 f6')}\n          key={setting.name}\n        >\n          {content}\n        </div>\n      );\n    });\n  }\n}\n\nSettingsEditor.propTypes = {\n  settings: PropTypes.arrayOf(models.stepSetting).isRequired,\n  // eslint-disable-next-line\n  value: PropTypes.object.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n};\n\nSettingsEditor.defaultProps = {\n  disabled: false,\n};\n","import * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { cloneDeep } from 'lodash';\nimport C from 'classnames';\n\nimport * as Models from '../models';\nimport Button from '../components/button';\nimport SettingsEditor from '../settingsEditor';\nimport { getStepSettings, getStep } from './steps';\nimport * as Settings from './settings';\nimport validate from '../settingsEditor/validator';\n\nclass EditStep extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editingName: !props.stepToEdit.name,\n      saving: false,\n      saveInfo: { invalid: true },\n    };\n  }\n\n  get editingStep() {\n    const { stepToEdit, config, type } = this.props;\n    const list = config[`${type}_steps`];\n    return list.find(item => item.id === stepToEdit.id);\n  }\n\n  onNameChange = (e) => {\n    this.submitChange(e.target.name, e.target.value);\n  }\n\n  onConfigChange = (configUpdate) => {\n    this.submitChange('config', { ...this.editingStep.config, ...configUpdate });\n  }\n\n  onSaveInfoChange = (saveInfoUpdate) => {\n    const { saveInfo } = this.state;\n    const newSaveInfo = { ...cloneDeep(saveInfo), ...saveInfoUpdate };\n    newSaveInfo.invalid = !validate(Settings.saveStep, newSaveInfo);\n    this.setState({ saveInfo: newSaveInfo });\n  }\n\n\n  onLeaveSavingMode = () => {\n    this.setState({ saving: false });\n  }\n\n  delete = () => {\n    const {\n      onUpdate, config, type, stepToEdit, onSwitchContent,\n    } = this.props;\n\n    const stepListName = `${type}_steps`;\n    const newStepList = cloneDeep(config[stepListName]);\n    const idx = newStepList.findIndex(item => item.id === stepToEdit.id);\n    newStepList.splice(idx, 1);\n    onUpdate({ [stepListName]: newStepList });\n\n    if (!newStepList.length) {\n      onSwitchContent({ type: 'edit_general' });\n    } else if (idx === newStepList.length) {\n      onSwitchContent({ type: `edit_${type}_step`, stepToEdit: newStepList[idx - 1] });\n    } else {\n      onSwitchContent({ type: `edit_${type}_step`, stepToEdit: newStepList[idx] });\n    }\n  }\n\n  save = () => {\n    this.onLeaveSavingMode();\n  }\n\n  submitChange(name, to) {\n    const { onUpdate, config, type } = this.props;\n    const newStep = cloneDeep(this.editingStep);\n    newStep[name] = to;\n\n    const stepListName = `${type}_steps`;\n    const newStepList = cloneDeep(config[stepListName]);\n    newStepList[newStepList.findIndex(item => item.id === newStep.id)] = newStep;\n    onUpdate({ [stepListName]: newStepList });\n  }\n\n  render() {\n    const { editingStep, state: { editingName, saving, saveInfo } } = this;\n    const baseStep = getStep(editingStep.type);\n    return (\n      <div className=\"bg-white pa3\">\n        <div className=\"mt2 fr\">\n          <Button onClick={this.delete}>\n            <i className=\"fa fa-trash mr1\" />\n            Delete\n          </Button>\n        </div>\n        <div className=\"f3 mv2\">\n          {\n            editingName ? (\n              <input\n                name=\"name\"\n                className={C({ 'ba b--red': !editingStep.name })}\n                onChange={this.onNameChange}\n                onBlur={() => editingStep.name && this.setState({ editingName: false })}\n                value={editingStep.name}\n              />\n            ) : (\n              <>\n                <span>{editingStep.name}</span>\n                <i\n                  className=\"f5 ml2 fa fa-edit hover-black-70 pointer dn\"\n                  onClick={() => this.setState({ editingName: true })}\n                />\n              </>\n            )\n          }\n        </div>\n        {baseStep.name !== editingStep.name && (\n          <div className=\"c-st mv2\">(Base step: {baseStep.name})</div>\n        )}\n        {saving && (\n          <>\n            <SettingsEditor\n              settings={Settings.saveStep}\n              onUpdate={this.onSaveInfoChange}\n              value={saveInfo}\n            />\n            <div className=\"flex justify-between\">\n              <div>\n                <Button className=\"dib mt2\" onClick={this.onLeaveSavingMode}>\n                  <i className=\"fa fa-times mr1\" />\n                  Cancel\n                </Button>\n              </div>\n              <div>\n                <Button className=\"dib mt2\" onClick={this.save} disabled={saveInfo.invalid}>\n                  <i className=\"fa fa-save mr1\" />\n                  Save\n                </Button>\n              </div>\n            </div>\n            <hr />\n          </>\n        )}\n        <SettingsEditor\n          settings={getStepSettings(editingStep.type)}\n          onUpdate={this.onConfigChange}\n          value={editingStep.config}\n          disabled={saving}\n        />\n      </div>\n    );\n  }\n}\n\nEditStep.propTypes = {\n  config: Models.config.isRequired,\n  type: Models.stepCommand.isRequired,\n  stepToEdit: Models.step.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n  onSwitchContent: PropTypes.func.isRequired,\n};\n\nexport default EditStep;\n","import { cloneDeep } from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport * as Models from '../models';\nimport SettingsEditor from '../settingsEditor';\nimport * as Settings from './settings';\n\nexport default class EditGeneral extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(generalUpdate) {\n    const { config, onUpdate } = this.props;\n    onUpdate({ general: { ...cloneDeep(config.general), ...generalUpdate } });\n  }\n\n  render() {\n    const { config } = this.props;\n    return (\n      <div className=\"bg-white pa3 f6\">\n        <SettingsEditor\n          settings={Settings.general}\n          value={config.general}\n          onUpdate={this.onChange}\n        />\n      </div>\n    );\n  }\n}\n\nEditGeneral.propTypes = {\n  config: Models.config.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n};\n","import ubuntu from './ubuntu.json';\nimport cuda from './cuda.json';\nimport tensorflow from './tensorflow.json';\nimport deepo from './deepo.json';\n\nexport default [\n  ubuntu,\n  cuda,\n  tensorflow,\n  deepo,\n];\n","import * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { cloneDeep, memoize } from 'lodash';\n\nimport * as Models from '../models';\nimport Card from '../components/card';\nimport Button from '../components/button';\nimport SettingsEditor from '../settingsEditor';\nimport dockers from './dockers';\nimport * as Settings from './settings';\nimport { getStep } from './steps';\n\nconst ResetButton = ({ onClick }) => (\n  <Button className=\"fr\" onClick={onClick}>\n    <i className=\"fa fa-chevron-left mr1\" />\n    Go Back\n  </Button>\n);\n\nResetButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nclass EditDocker extends React.Component {\n  getPreset = memoize(base => dockers.find(p => p.base === base));\n\n  onPresetChosen(to) {\n    let newBaseDocker;\n    if (!to) {\n      newBaseDocker = {};\n    } else if (to === 'Custom') {\n      newBaseDocker = {\n        custom: true,\n      };\n    } else {\n      newBaseDocker = {\n        presetBase: to.base,\n      };\n    }\n    this.update(newBaseDocker);\n  }\n\n  onPresetUpdate = ({ tag }) => {\n    const { config } = this.props;\n    const newBaseDocker = cloneDeep(config.base_docker);\n    newBaseDocker.image_url = `${newBaseDocker.presetBase}:${tag}`;\n    newBaseDocker.os = 'ubuntu';\n    this.update(newBaseDocker);\n  }\n\n  onCustomUpdate = (dockerUpdate) => {\n    const { config } = this.props;\n    this.update({ ...cloneDeep(config.base_docker), ...dockerUpdate });\n  }\n\n  update(newBaseDocker) {\n    const { onUpdate, config } = this.props;\n    if (newBaseDocker.os) {\n      const pred = s => getStep(s.type).os.includes(newBaseDocker.os);\n      onUpdate({\n        run_steps: config.run_steps.filter(pred),\n        entrypoint_steps: config.entrypoint_steps.filter(pred),\n        base_docker: newBaseDocker,\n      });\n    } else {\n      onUpdate({\n        base_docker: newBaseDocker,\n      });\n    }\n  }\n\n  render() {\n    const { config: { base_docker: baseDocker } } = this.props;\n    if (baseDocker.custom) {\n      return (\n        <div className=\"bg-white pa3\">\n          <ResetButton onClick={() => this.onPresetChosen(null)} />\n          <div className=\"f3 mv2\">Custom Base Docker</div>\n          <SettingsEditor\n            settings={Settings.docker}\n            value={baseDocker}\n            onUpdate={this.onCustomUpdate}\n          />\n        </div>\n      );\n    }\n\n    if (baseDocker.presetBase) {\n      const preset = this.getPreset(baseDocker.presetBase);\n      return (\n        <div className=\"bg-white pa3\">\n          <ResetButton onClick={() => this.onPresetChosen(null)} />\n          <div className=\"f3 mv2\">{preset.name}</div>\n          <div className=\"c-st mv2\">[Image: {baseDocker.image_url}]</div>\n          <SettingsEditor\n            settings={preset.config}\n            value={{ tag: baseDocker.image_url && baseDocker.image_url.split(':').pop() }}\n            onUpdate={this.onPresetUpdate}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {\n          dockers.map(item => (\n            <Card\n              key={item.base}\n              name={item.name}\n              pointer\n              icon={item.icon}\n              onClick={() => this.onPresetChosen(item)}\n            />\n          ))\n        }\n        <Card\n          name=\"Custom\"\n          pointer\n          icon=\"fa fa-cogs\"\n          onClick={() => this.onPresetChosen('Custom')}\n        />\n      </div>\n    );\n  }\n}\n\nEditDocker.propTypes = {\n  config: Models.config.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n};\n\nexport default EditDocker;\n","import FileSaver from 'file-saver';\nimport * as PropTypes from 'prop-types';\nimport React from 'react';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Button from '../components/button';\n\nclass EditDockerfile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editing: false,\n      content: props.text,\n    };\n    this.textArea = React.createRef();\n  }\n\n  onChange = (e) => {\n    this.setState({ content: e.target.value });\n  }\n\n  onEdit = () => {\n    this.setState({ editing: true });\n  }\n\n  onCopy = () => {\n    this.textArea.current.select();\n    document.execCommand('copy');\n  }\n\n  onSave = () => {\n    const { content } = this.state;\n    FileSaver.saveAs(new Blob([content]), 'Dockerfile');\n  }\n\n  render() {\n    const { content, editing } = this.state;\n    return (\n      <div className=\"bg-white pa3 f6\">\n        <div>Content</div>\n        <textarea\n          ref={this.textArea}\n          className=\"mt2 w-100\"\n          style={{ height: '96rem', maxHeight: '50vh' }}\n          value={content}\n          disabled={!editing}\n          onChange={this.onChange}\n          spellCheck={false}\n        />\n        <div className=\"flex justify-between\">\n          <div>\n            {!editing && (\n              <Button className=\"dib mt2\" onClick={this.onEdit}>\n                <i className=\"fa fa-edit mr1\" />\n                Edit\n              </Button>\n            )}\n          </div>\n          <div>\n            <Button className=\"dib mt2\" onClick={this.onCopy}>\n              <i className=\"fa fa-copy mr1\" />\n              Copy\n            </Button>\n            <Button className=\"dib mt2\" onClick={this.onSave}>\n              <i className=\"fa fa-download mr1\" />\n              Save\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nEditDockerfile.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default EditDockerfile;\n","import * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport * as Models from '../models';\nimport AddStep from './addStep';\nimport EditStep from './editStep';\nimport EditGeneral from './editGeneral';\nimport EditDocker from './editDocker';\nimport EditDockerfile from './editDockerfile';\n\nconst stepTypeTitle = {\n  add_run_step: 'Add Run Step',\n  add_entrypoint_step: 'Add Entrypoint Step',\n  edit_run_step: 'Edit Run Step',\n  edit_entrypoint_step: 'Edit Entrypoint Step',\n  edit_general: 'General Config',\n  edit_docker: 'Base Docker',\n  edit_dockerfile: 'Generated Dockerfile',\n};\n\nconst Content = ({\n  config, content, onUpdate, onSwitchContent,\n}) => {\n  const sharedProps = {\n    config,\n    onUpdate,\n    onSwitchContent,\n  };\n  return (\n    <div className=\"bg-p block\">\n      <div className=\"pa3 h3 flex items-center c-t\">{stepTypeTitle[content.type]}</div>\n      {(() => {\n        switch (content.type) {\n          case 'add_run_step':\n            return (\n              <AddStep type=\"run\" {...sharedProps} />\n            );\n          case 'add_entrypoint_step':\n            return (\n              <AddStep type=\"entrypoint\" {...sharedProps} />\n            );\n          case 'edit_run_step':\n            return (\n              <EditStep\n                type=\"run\"\n                key={content.stepToEdit.id}\n                stepToEdit={content.stepToEdit}\n                onUpdate={onUpdate}\n                {...sharedProps}\n              />\n            );\n          case 'edit_entrypoint_step':\n            return (\n              <EditStep\n                type=\"entrypoint\"\n                key={content.stepToEdit.id}\n                stepToEdit={content.stepToEdit}\n                onUpdate={onUpdate}\n                {...sharedProps}\n              />\n            );\n          case 'edit_general':\n            return (\n              <EditGeneral {...sharedProps} />\n            );\n          case 'edit_docker':\n            return (\n              <EditDocker {...sharedProps} />\n            );\n          case 'edit_dockerfile':\n            return (\n              <EditDockerfile\n                text={content.text}\n                key={content.text}\n              />\n            );\n          default:\n            return null;\n        }\n      })()}\n    </div>\n  );\n};\n\nContent.propTypes = {\n  config: Models.config.isRequired,\n  content: Models.content.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n  onSwitchContent: PropTypes.func.isRequired,\n};\n\nexport default Content;\n","import { cloneDeep } from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\n\nimport Card from '../components/card';\nimport * as Models from '../models';\nimport Button from '../components/button';\n\nconst mergeRefs = (...refs) => (ref) => {\n  refs.forEach((resolvableRef) => {\n    if (typeof resolvableRef === 'function') {\n      resolvableRef(ref);\n    } else {\n      // eslint-disable-next-line\n\t\t\tresolvableRef.current = ref;\n    }\n  });\n};\n\nclass StepList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.lastCount = props.items.length;\n    this.lastItemRef = React.createRef();\n    this.onDragEnd = this.onDragEnd.bind(this);\n  }\n\n  componentDidUpdate() {\n    const { items } = this.props;\n    if (this.lastCount < items.length && this.lastItemRef.current.scrollIntoView) {\n      this.lastItemRef.current.scrollIntoView({ block: 'end', behavior: 'smooth' });\n    }\n    this.lastCount = items.length;\n  }\n\n  onDragEnd(result) {\n    if (!result.destination) {\n      return;\n    }\n    const {\n      items,\n      onUpdate,\n    } = this.props;\n    const start = result.source.index;\n    const end = result.destination.index;\n\n    const newItems = cloneDeep(items);\n    const [removed] = newItems.splice(start, 1);\n    newItems.splice(end, 0, removed);\n    onUpdate(newItems);\n  }\n\n  render() {\n    const {\n      items, onSelect, selected, onUpdate,\n    } = this.props;\n\n    return (\n      <DragDropContext\n        onDragEnd={this.onDragEnd}\n      >\n        <Droppable droppableId=\"droppable\">\n          {provided => (\n            <div\n              ref={provided.innerRef}\n              style={{\n                flexGrow: 1,\n              }}\n            >\n              {items.map((item, index) => (\n                <Draggable index={index} key={item.id} draggableId={item.id}>\n                  {provided2 => (\n                    <div\n                      ref={index === items.length - 1\n                        ? mergeRefs(provided2.innerRef, this.lastItemRef)\n                        : provided2.innerRef}\n                      {...provided2.draggableProps}\n                      {...provided2.dragHandleProps}\n                      style={provided2.draggableProps.style}\n                    >\n                      <Card\n                        name={item.name}\n                        icon={item.icon || 'fa fa-terminal'}\n                        selected={selected === item.id}\n                        warning={item.invalid}\n                        onClick={() => onSelect(item)}\n                      >\n                        <Button\n                          className=\"ml1\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n\n                            const newItems = cloneDeep(items);\n                            const idx = newItems.findIndex(ni => ni.id === item.id);\n                            newItems.splice(idx, 1);\n                            onUpdate(newItems);\n                          }}\n                        >\n                          <i className=\"fa fa-trash\" />\n                        </Button>\n                      </Card>\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n\nStepList.propTypes = {\n  items: PropTypes.arrayOf(Models.step).isRequired,\n  onSelect: PropTypes.func,\n  onUpdate: PropTypes.func.isRequired,\n  selected: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n};\n\nStepList.defaultProps = {\n  onSelect: () => {},\n  selected: false,\n};\n\nexport default StepList;\n","import * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport StepList from './stepList';\nimport Card from '../components/card';\nimport * as Models from '../models';\nimport Button from '../components/button';\n\nconst Pipeline = ({\n  config,\n  content,\n  onUpdate,\n  onSwitchContent,\n}) => (\n  <div className=\"pt3 ph2 pb2\">\n    <div className=\"mb3 bg-p block\">\n      <div className=\"pa3 h3 flex items-center c-t\">General</div>\n      <Card\n        name={config.general.name}\n        pointer\n        warning={config.general.invalid}\n        selected={content.type === 'edit_general'}\n        onClick={() => { onSwitchContent({ type: 'edit_general' }); }}\n      />\n    </div>\n    <div className=\"mb3 bg-p block\">\n      <div className=\"pa3 h3 flex items-center c-t\">From</div>\n      <Card\n        name={config.base_docker.image_url || 'Not specified'}\n        pointer\n        warning={config.base_docker.invalid}\n        icon=\"devicon-docker-plain colored\"\n        selected={content.type === 'edit_docker'}\n        onClick={() => { onSwitchContent({ type: 'edit_docker' }); }}\n      />\n    </div>\n    {config.base_docker && (\n      <>\n        <div className=\"bg-p mb3 block\">\n          <div className=\"bg-p pa3 h3 flex items-center justify-between c-t sticky\">\n            <div>Run</div>\n            <Button\n              mild\n              disabled={config.base_docker.invalid}\n              onClick={() => onSwitchContent({ type: 'add_run_step' })}\n            >\n              <i className=\"fa fa-plus\" />\n            </Button>\n          </div>\n          <StepList\n            items={config.run_steps}\n            selected={content.type === 'edit_run_step' && content.stepToEdit.id}\n            onSelect={(step) => { onSwitchContent({ type: 'edit_run_step', stepToEdit: step }); }}\n            onUpdate={(steps) => { onUpdate({ run_steps: steps }); }}\n          />\n        </div>\n        <div className=\"bg-p block\">\n          <div className=\"bg-p pa3 h3 flex items-center justify-between c-t sticky\">\n            <div>Entrypoint</div>\n            <Button\n              mild\n              disabled={config.base_docker.invalid}\n              onClick={() => onSwitchContent({ type: 'add_entrypoint_step' })}\n            >\n              <i className=\"fa fa-plus\" />\n            </Button>\n          </div>\n          <StepList\n            items={config.entrypoint_steps}\n            selected={content.type === 'edit_entrypoint_step' && content.stepToEdit.id}\n            onSelect={(step) => { onSwitchContent({ type: 'edit_entrypoint_step', stepToEdit: step }); }}\n            onUpdate={(steps) => { onUpdate({ entrypoint_steps: steps }); }}\n          />\n        </div>\n      </>\n    )}\n  </div>\n);\n\nPipeline.propTypes = {\n  config: Models.config.isRequired,\n  content: Models.content.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n  onSwitchContent: PropTypes.func.isRequired,\n};\n\nexport default Pipeline;\n","import 'babel-polyfill';\nimport { cloneDeep, find } from 'lodash';\nimport * as React from 'react';\nimport Alert from 'react-s-alert';\nimport 'tachyons/css/tachyons.min.css';\nimport 'react-s-alert/dist/s-alert-default.css';\n\n// import gelato from './gelato/lib/index';\nimport './main.scss';\nimport Title from './title';\nimport Content from './content';\nimport Pipeline from './pipeline/pipeline';\nimport { validateConfig, configPreSave } from './config-utils';\nimport Button from './components/button';\n\n\nconst dummyConfig = {\n  version: '1',\n  general: {\n    name: 'noname',\n    shell: 'bash -c',\n    env_variables: [],\n    workdir: '~',\n  },\n  base_docker: {\n    invalid: true,\n  },\n  run_steps: [],\n  entrypoint_steps: [],\n  invalid: true,\n};\n\nconst LOCAL_STORAGE_KEY = 'icecream-last-state';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      config: dummyConfig,\n      content: {\n        type: 'edit_general',\n      },\n      savedSteps: [],\n    };\n    this.onUpdate = this.onUpdate.bind(this);\n    this.onSwitchContent = this.onSwitchContent.bind(this);\n    this.onReset = this.onReset.bind(this);\n  }\n\n  async componentDidMount() {\n    const item = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (item) {\n      try {\n        const state = JSON.parse(item);\n        this.setState(state);\n      } catch (ex) {\n        Alert.warning('Failed to load last state.');\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(this.state));\n  }\n\n  onReset() {\n    this.setState({\n      config: cloneDeep(dummyConfig),\n      content: {\n        type: 'edit_general',\n      },\n    });\n  }\n\n  onUpdate(update) {\n    const { config, content } = this.state;\n    const newConfig = validateConfig({ ...cloneDeep(config), ...update });\n\n    if (content.type === 'edit_run_step') {\n      const { id } = content.stepToEdit;\n      const step = find(newConfig.run_steps, { id });\n      let newContent;\n      if (step) {\n        newContent = {\n          type: 'edit_run_step',\n          stepToEdit: step,\n        };\n      } else {\n        newContent = {\n          type: 'edit_general',\n        };\n      }\n      this.setState({ content: newContent, config: newConfig });\n    } else if (content.type === 'edit_entrypoint_step') {\n      const { id } = content.stepToEdit;\n      const step = find(newConfig.entrypoint_steps, { id });\n      let newContent;\n      if (step) {\n        newContent = {\n          type: 'edit_entrypoint_step',\n          stepToEdit: step,\n        };\n      } else {\n        newContent = {\n          type: 'edit_general',\n        };\n      }\n      this.setState({ content: newContent, config: newConfig });\n    } else {\n      this.setState({ config: newConfig });\n    }\n  }\n\n  onSwitchContent(newContent) {\n    this.setState({ content: newContent });\n  }\n\n  componentDidCatch(error) {\n    Alert.error(error.toString(), { position: 'bottom-right' });\n  }\n\n  render() {\n    const { config, content } = this.state;\n    return (\n      <div className=\"helvetica flex flex-column vh-100\">\n        <Title\n          config={config}\n          onUpdate={this.onUpdate}\n          onReset={this.onReset}\n          onSwitchContent={this.onSwitchContent}\n          invalid={config.invalid}\n        />\n        {/* https://stackoverflow.com/questions/16671914/flexible-box-layout-model-how-should-auto-margins-in-the-cross-axis-direction-b */}\n        <div className=\"flex self-stretch flex-auto\">\n          <div className=\"flex flex-auto mw9 center\">\n            <div className=\"w-40 flex flex-column justify-between mh2 pb2\">\n              <div className=\"overflow-y-auto\">\n                <Pipeline\n                  config={config}\n                  content={content}\n                  onUpdate={this.onUpdate}\n                  onSwitchContent={this.onSwitchContent}\n                />\n              </div>\n              <div style={{ flexGrow: 0 }}>\n                <Button\n                  className=\"db c-t bg-pd tc block\"\n                  disabled={config.invalid}\n                  dark\n                  onClick={() => {\n                    try {\n                      this.onSwitchContent({\n                        type: 'edit_dockerfile',\n                        // text: gelato(configPreSave(config)),\n                      });\n                    } catch (ex) {\n                      Alert.error(`An error occured while generating Dockerfile: ${ex}`, { position: 'bottom-right' });\n                    }\n                  }}\n                >\n                  Generate Dockerfile\n                </Button>\n              </div>\n            </div>\n            <div className=\"w-60 ph2 pt3 pb4 mh2 overflow-y-auto\">\n              <Content\n                content={content}\n                config={config}\n                onUpdate={this.onUpdate}\n                onSwitchContent={this.onSwitchContent}\n              />\n            </div>\n          </div>\n        </div>\n        <Alert stack={{ limit: 3 }} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import * as React from 'react';\r\nimport { render } from 'react-dom';\r\nimport App from './App';\r\n\r\nrender(<App />, document.getElementById('content'));\r\n"],"sourceRoot":""}